
<main>

    <div class="row">
        <!-- aside -->
        <div class="col s3 aside blue-grey darken-3">
            <!-- perfil -->
            <div class="collection">
                <div class="collection-item avatar valign-wrapper">
                    <span class="title valign"><%= @user.email %></span>
                    <!-- <a href="#!" class="secondary-content valign"><i class="material-icons">perm_identity</i></a> -->
                    <%= link_to(edit_user_registration_path, class: "secondary-content valign") do %>
                        <i class="material-icons">perm_identity</i>
                    <% end %>
                </div>
            </div>
            <!-- /perfil -->

            <!-- pomodoros -->
            <%= render 'show_timer_lists' %>
            <!-- /pomodoros -->

            
            <div class="btns-footer">
                <!-- sair -->
                <%= link_to(destroy_user_session_path, method: :delete, class: "waves-effect waves-light btn red close") do %>
                    <i class="material-icons left">input</i>Sair
                <% end %>
                <!-- /sair -->

                <!-- notifications -->
                <a href="#!" id="active-notifications" class="waves-effect waves-light btn blue btn-pomopro">
                    <i class="material-icons left">add_alert</i>
                    Ativar Notificações
                </a>
                <!-- /notifications  -->
            </div>
            

        </div>
        <!-- /aside -->
        
        <!-- content -->
        <div id="content" class="col s9 content offset-s3">
            <!-- title -->
            <nav class="top-nav teal">
                <div class="container">
                    <div class="nav-wrapper">
                        <a class="page-title">
                            Pomopro Timer
                        </a>
                    </div>
                </div>
            </nav>
            <!-- /title -->

            <div class="col m6 offset-m3 content-crono">
                <!-- buttons pomodoro -->
                <div class="center">
                    <a id="pomo-timer" class="waves-effect waves-light btn-large red">
                        <i class="material-icons left">play_circle_outline</i>
                        Pomodoro
                    </a>
                    <a id="short-break" class="waves-effect waves-light btn-large blue">
                        <i class="material-icons left">replay_5</i>
                        Break
                    </a>
                    <a id="long-break" class="waves-effect waves-light btn-large">
                        <i class="material-icons left">replay_30</i>
                        Long Break
                    </a>
                </div>
                <!-- buttons pomodoro -->

                <!-- number -->
                <div id="timer" class="crono-number center">
                    25:00
                </div>
                <!-- /number -->

                <!-- progress -->
                <div id="progress-bar" class="progress red lighten-4">
                    <div class="determinate red"></div>
                </div>
                <!-- /progress -->

                <!-- buttons play -->
                <div class="center">
                    <a id="play-timer" class="btn-floating btn-large waves-effect waves-light red">
                        <i class="material-icons">play_arrow</i>
                    </a>
                    <a id="pause-timer" class="btn-floating btn-large waves-effect waves-light blue">
                        <i class="material-icons">pause</i>
                    </a>
                    <a id="stop-timer" class="btn-floating btn-large waves-effect waves-light teal">
                        <i class="material-icons">stop</i>
                    </a>
                    
                </div>
                <!-- /buttons play -->

                <!-- buttons pomodoro create db -->
                <div class="real-buttons">
                    <%= button_to "Pomodoro", user_timers_path(:user_id => current_user.id, :status => "pomo"), method: :create, remote: true, id:"real-button-pomo" %> 
                    <%= button_to "Break", user_timers_path(:user_id => current_user.id, :status => "break"), method: :create, remote: true, id:"real-button-break" %>
                    <%= button_to "Long Break", user_timers_path(:user_id => current_user.id, :status => "long_break"), method: :create, remote: true, id:"real-button-long-break" %>
                </div>
                <!-- /buttons pomodoro create db -->

            </div>                

        </div>
        <!-- /content -->

    </div>
</main>




<!-- javascripts -->
<% content_for :js do %>
    <script type='text/javascript'>

        ///////////////////////////////
        //  Functionnality of Timer
        //////////////////////////////


        var htmlTimer = document.getElementById('timer');
        var segTotal = 60, minTotal = 24;

        // Progress Bar
        var progressBar = document.querySelector("#progress-bar");
        var children = document.querySelector("#progress-bar .determinate");
        var movementBar = 0;

        // Minute and Second
        var second = 60;
        var minute = 24;
         
        // Real Buttons
        var realPomo = document.getElementById("real-button-pomo");
        var realBreak = document.getElementById("real-button-break");
        var realLongBreak = document.getElementById("real-button-long-break");

        // Buttons Play, Pause and Stop
        var play = document.querySelector("#play-timer");
        var pause = document.querySelector("#pause-timer");
        var stop = document.querySelector("#stop-timer");
        var firstClick = true;

        // Buttons Fake Pomodoro, Break and Long Break
        var pomoTimer = document.querySelector("#pomo-timer");
        var shortBreak = document.querySelector("#short-break");
        var longBreak = document.querySelector("#long-break");

        // Play, Pause and Stop
        if(play){
            play.addEventListener("click", function(){
                if(firstClick){
                    var timer = setInterval('timer();', 1000);
                    play.classList.add("disabled");
                    pause.classList.remove("disabled");
                }
                firstClick = false;
                pause.addEventListener("click", function(){
                    clearInterval(timer);
                    firstClick = true;
                    play.classList.remove("disabled");
                    pause.classList.add("disabled");
                });
                stop.addEventListener("click", function(){
                    clearInterval(timer);
                    minute = minTotal;
                    second = segTotal;
                    movementBar = 0;
                    htmlTimer.innerText = (minute + 1) + ":00";
                    children.style.width = movementBar + "%";
                    firstClick = true;
                    play.classList.remove("disabled");
                    pause.classList.remove("disabled");
                });
            });
        };

        // Activated functions in click of buttons fake
        if(pomoTimer){
            pomoTimer.addEventListener("click", function(){
                redefineTimer(24, 60);
                redefineProgressBar("red");
            });
        };

        if(shortBreak){
            shortBreak.addEventListener("click", function(){
                redefineTimer(4, 60);
                redefineProgressBar("blue");
            });
        };

        if(longBreak){
            longBreak.addEventListener("click", function(){
                redefineTimer(29, 60);
                redefineProgressBar();
            });
        };


        function createTimerBackEnd(){
            if(minTotal == 24 && segTotal == 60){
                realPomo.click();
            }else if(minTotal == 4 && segTotal == 60){
                realBreak.click();
            }else{
                realLongBreak.click();
            }
        }

        function timer(){   
            if (second > 0){
                second--;
                if(second < 10){second = "0"+second}
                movementBar += barMovement();
            }else if(second == 0 && minute > 0){
                second = 59;
                minute--;
                if(minute < 10){minute = "0"+ minute}
            }
            htmlTimer.innerText = minute + ":" + second;
            if(minute == 0 && second == 0){
                movementBar=100;
                createTimerBackEnd();
                stop.click();
            }
            children.style.width = movementBar + "%";

        }

        function redefineTimer(min, seg){
            minTotal = min;
            segTotal = seg;
            minute = minTotal;
            second = segTotal;
            htmlTimer.innerText = (minute + 1) + ":00";
            stop.click();
        };

        function redefineProgressBar(color){
            progressBar.classList.remove("red");
            progressBar.classList.remove("blue");
            progressBar.classList.add(color);
            children.classList.remove("red");
            children.classList.remove("blue");
            children.classList.add(color);
        };

        function barMovement(){
            var onePercent = (((minTotal + 1) * 60) / 100);
            var movementPerSeg = 1 / onePercent;
            return movementPerSeg;
        };

        ///////////////////////////////////////////
        //  Pomos, Breaks and Long Breaks lengths
        //////////////////////////////////////////


        // Lists
        var pomosList = document.querySelector(".list-pomos");
        var breaksList = document.querySelector(".list-breaks");
        var longBreaksList = document.querySelector(".list-long-breaks");
        // Containers for timers length 
        var pomosContainer = document.getElementById("pomos-length");
        var breaksContainer = document.getElementById("breaks-length");
        var longBreaksContainer = document.getElementById("long-breaks-length"); 
        // Executed functions
        itensLength(pomosList, pomosContainer);
        itensLength(breaksList, breaksContainer);
        itensLength(longBreaksList,longBreaksContainer);

        function itensLength(list, container){
            var lengthList = list.querySelectorAll(".li-timers").length;
            container.innerText = lengthList;
        };

        ////////////////////////////////////
        // Notification
        ///////////////////////////////////

        Notification.requestPermission();

        // Add to button active notifica
        var buttonNotification = document.getElementById("active-notifications");

        buttonNotification.addEventListener("click", function(){
            // Let's check if the browser supports notifications
              if (!("Notification" in window)) {
                console.log("Este browser não suporta o sistema de notificações, atualize ou instale outro browser!");
              }

              // Let's check whether notification permissions have alredy been granted
              else if (Notification.permission === "granted") {
                // If it's okay let's create a notification
                spawnNotification("Notificações Ativas!", "//i.imgur.com/dT6hmdc.png");
              }

              // Otherwise, we need to ask the user for permission
              else if (Notification.permission !== 'denied') {
                Notification.requestPermission(function (permission) {
                  // If the user accepts, let's create a notification
                  if (permission === "granted") {
                    spawnNotification("Notificações Ativadas!", "//i.imgur.com/dT6hmdc.png");
                  }
                });
              }
              // At last, if the user has denied notifications, and you 
              // want to be respectful there is no need to bother them any more.
        });
        
        // Function notification with icon and body text
        function spawnNotification(theTitle,theIcon) {
          var options = {
            icon: theIcon
          }
          var n = new Notification(theTitle,options);
          setTimeout(n.close.bind(n), 4000);
        }
    </script>
<% end %>
<!-- /javascripts -->